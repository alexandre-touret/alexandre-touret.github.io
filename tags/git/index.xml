<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>git - Tag - Alexandre Touret's Blog</title><link>http://blog.touret.info/tags/git/</link><description>git - Tag - Alexandre Touret's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution 4.0 International License.</copyright><lastBuildDate>Mon, 03 May 2021 20:47:11 +0200</lastBuildDate><atom:link href="http://blog.touret.info/tags/git/" rel="self" type="application/rss+xml"/><item><title>Utiliser GPG dans WSL2</title><link>http://blog.touret.info/2021/05/03/utiliser-gpg-dans-wsl2/</link><pubDate>Mon, 03 May 2021 20:47:11 +0200</pubDate><author><name>Alexandre Touret</name></author><guid>http://blog.touret.info/2021/05/03/utiliser-gpg-dans-wsl2/</guid><description><![CDATA[<div class="featured-image">
                <img src="/assets/images/2021/05/pexels-photo-261621.jpeg" referrerpolicy="no-referrer">
            </div><p><figure><a class="lightgallery" href="/assets/images/2021/05/pexels-photo-261621.jpeg" title="pexel photo" data-thumbnail="/assets/images/2021/05/pexels-photo-261621.jpeg">
        <img
            
            loading="lazy"
            src="/assets/images/2021/05/pexels-photo-261621.jpeg"
            srcset="/assets/images/2021/05/pexels-photo-261621.jpeg, /assets/images/2021/05/pexels-photo-261621.jpeg 1.5x, /assets/images/2021/05/pexels-photo-261621.jpeg 2x"
            sizes="auto"
            alt="pexel photo">
    </a></figure></p>
<p>Pourquoi utiliser <a href="https://fr.wikipedia.org/wiki/GNU_Privacy_Guard" target="_blank" rel="noopener noreferrer">GPG</a> ? Par exemple <a href="https://blog.touret.info/2019/08/09/verifier-les-commit-git-avec-gpg/" target="_blank" rel="noopener noreferrer">pour signer les commits GIT</a>. Maintenant comment faire quand on est sous Windows 10 et qu&rsquo;on souhaite utiliser <a href="https://docs.microsoft.com/en-us/windows/wsl/install-win10" target="_blank" rel="noopener noreferrer">le sous syst√®me Linux (WSL2)</a>?</p>
<p>Sous GNU/Linux, l&rsquo;installation et l&rsquo;utilisation avec git est tr√®s simple. Avec <a href="https://docs.microsoft.com/en-us/windows/wsl/install-win10" target="_blank" rel="noopener noreferrer">WSL2</a>,‚Ä¶ il faut un peu d&rsquo;huile de coude üôÇ</p>
<p>Je vais t√¢cher de d√©crire dans cet article les diff√©rentes manipulations n√©cessaires pour:</p>
<ul>
<li>Importer une cl√© GPG existante</li>
<li>Utiliser GPG pour signer mes commits dans WSL2</li>
</ul>
<h2 id="importer-une-cl√©-gpg-existante" class="headerLink">
    <a href="#importer-une-cl%c3%a9-gpg-existante" class="header-mark"></a>1 Importer une cl√© GPG existante</h2><h3 id="export-de-la-cl√©-gpg" class="headerLink">
    <a href="#export-de-la-cl%c3%a9-gpg" class="header-mark"></a>1.1 Export de la cl√© GPG</h3><h4 id="identifier-l-id-de-la-cl√©" class="headerLink">
    <a href="#identifier-l-id-de-la-cl%c3%a9" class="header-mark"></a>1.1.1 Identifier l&rsquo; ID de la cl√©</h4><p>Lancez la commande suivante:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">gpg --export <span class="si">${</span><span class="nv">ID</span><span class="si">}</span> &gt; public.key
</span></span><span class="line"><span class="cl">gpg --export-secret-key <span class="si">${</span><span class="nv">ID</span><span class="si">}</span> &gt; private.key
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="import" class="headerLink">
    <a href="#import" class="header-mark"></a>1.2 Import</h3><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">gpg --import public.key
</span></span><span class="line"><span class="cl">gpg --import private.key
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="v√©rification" class="headerLink">
    <a href="#v%c3%a9rification" class="header-mark"></a>1.3 V√©rification</h3><p>Pour v√©rifier que la cl√© est bien configur√©e, vous pouvez lancer la commande suivante:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">gpg --list-secret-keys --keyid-format LONG   alexandre@....
</span></span><span class="line"><span class="cl">sec   rsa4096/CLE_ID 2019-12-20 <span class="o">[</span>SC<span class="o">]</span>
</span></span><span class="line"><span class="cl">      ********************
</span></span><span class="line"><span class="cl">uid                <span class="o">[</span>  ultime <span class="o">]</span> Alexandre &lt;alexandre@....&gt;
</span></span><span class="line"><span class="cl">ssb   rsa4096/SUB 2019-12-20 <span class="o">[</span>E<span class="o">]</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Si la cl√© n&rsquo;est pas reconnue comme ultime ou comme de confiance, il faudra l&rsquo;√©diter:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">gpg --edit-key CLE_ID
</span></span><span class="line"><span class="cl">Please decide how far you trust this user to correctly verify other users<span class="s1">&#39; keys
</span></span></span><span class="line"><span class="cl"><span class="s1">(by looking at passports, checking fingerprints from different sources, etc.)
</span></span></span><span class="line"><span class="cl"><span class="s1">  1 = I don&#39;</span>t know or won<span class="err">&#39;</span>t say
</span></span><span class="line"><span class="cl">  <span class="nv">2</span> <span class="o">=</span> I <span class="k">do</span> NOT trust
</span></span><span class="line"><span class="cl">  <span class="nv">3</span> <span class="o">=</span> I trust marginally
</span></span><span class="line"><span class="cl">  <span class="nv">4</span> <span class="o">=</span> I trust fully
</span></span><span class="line"><span class="cl">  <span class="nv">5</span> <span class="o">=</span> I trust ultimately
</span></span><span class="line"><span class="cl">  <span class="nv">m</span> <span class="o">=</span> back to the main menu
</span></span><span class="line"><span class="cl">Your decision? 
</span></span></code></pre></td></tr></table>
</div>
</div><p>Si vous ne voulez pas trop vous compliquer, je vous conseille de r√©pondre <code>5</code>.</p>
<h2 id="configuration-gpg-pour-wsl2" class="headerLink">
    <a href="#configuration-gpg-pour-wsl2" class="header-mark"></a>2 Configuration GPG pour WSL2</h2><p>Avant de configurer l&rsquo;agent GPG, vous pouvez vous r√©f√©rer <a href="https://blog.touret.info/2019/08/09/verifier-les-commit-git-avec-gpg/" target="_blank" rel="noopener noreferrer">√† cet article</a> pour configurer GIT et GPG. La configuration est √©quivalente.</p>
<p>Ensuite, cr√©ez le fichier <code>~/.gnupg/gpg.conf</code> avec le contenu suivant:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"># Uncomment within config (or add this line)
</span></span><span class="line"><span class="cl"># This tells gpg to use the gpg-agent
</span></span><span class="line"><span class="cl">use-agent
</span></span><span class="line"><span class="cl"># Set the default key
</span></span><span class="line"><span class="cl">default-key CLE_ID
</span></span></code></pre></td></tr></table>
</div>
</div><p>Puis cr√©ez le fichier <code>~/.gnupg/gpg-agent.conf</code> avec le contenu ci-dessous:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">default-cache-ttl 34560000
</span></span><span class="line"><span class="cl">max-cache-ttl 34560000
</span></span><span class="line"><span class="cl">pinentry-program /usr/bin/pinentry-curses
</span></span></code></pre></td></tr></table>
</div>
</div><p>Le cache ici est d√©fini en secondes. Il est mis ici √† 400 jours.</p>
<p>Ce dernier fichier fait r√©f√©rence au programme <code>pinentry</code>. Vous pouvez v√©rifier sa pr√©sence gr√¢ce √† la commande:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">ls /usr/bin/pinentry-curses 
</span></span></code></pre></td></tr></table>
</div>
</div><p>Si vous ne l&rsquo;avez pas, vous pouvez l&rsquo;installer gr√¢ce √† la commande suivante:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">sudo apt install pinentry-curses
</span></span></code></pre></td></tr></table>
</div>
</div><p>Maintenant, on peut configurer l&rsquo;environnement BASH en modifiant le fichier <code>~/.bashrc</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># enable GPG signing</span>
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">GPG_TTY</span><span class="o">=</span><span class="k">$(</span>tty<span class="k">)</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="o">[</span> ! -f ~/.gnupg/S.gpg-agent <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
</span></span><span class="line"><span class="cl">    <span class="nb">eval</span> <span class="k">$(</span> gpg-agent --daemon --options ~/.gnupg/gpg-agent.conf <span class="k">)</span>
</span></span><span class="line"><span class="cl"><span class="k">fi</span>
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">GPG_AGENT_INFO</span><span class="o">=</span><span class="si">${</span><span class="nv">HOME</span><span class="si">}</span>/.gnupg/S.gpg-agent:0:1
</span></span></code></pre></td></tr></table>
</div>
</div><p>Red√©marrez ensuite WSL2 pour que √ßa soit pris en compte.</p>
<p>A la premi√®re utilisation de GPG ( par ex. lors d&rsquo;un commit, vous aurez une interface <a href="https://fr.wikipedia.org/wiki/Ncurses" target="_blank" rel="noopener noreferrer">Ncurses</a> qui appara√Ætra dans votre prompt WSL2. Vous aurez √† renseigner le mot de passe de votre cl√©.</p>
]]></description></item><item><title>V√©rifier les commit GIT avec GPG</title><link>http://blog.touret.info/2019/08/09/verifier-les-commit-git-avec-gpg/</link><pubDate>Fri, 09 Aug 2019 16:13:21 +0200</pubDate><author><name>Alexandre Touret</name></author><guid>http://blog.touret.info/2019/08/09/verifier-les-commit-git-avec-gpg/</guid><description><![CDATA[<div class="featured-image">
                <img src="/assets/images/2019/08/kelly-sikkema-c3rk5toz0qa-unsplash.jpg" referrerpolicy="no-referrer">
            </div><p>Juste pour un pense b√™te, voici comment param√©trer <a href="https://git-scm.com/" target="_blank" rel="noopener noreferrer">GIT</a> et <a href="https://github.com/" target="_blank" rel="noopener noreferrer">GITHUB</a>/<a href="https://about.gitlab.com/" target="_blank" rel="noopener noreferrer">GITLAB</a> pour signer les commits avec <a href="https://gnupg.org" target="_blank" rel="noopener noreferrer">GPG</a>.</p>
<h2 id="configuration-gpg" class="headerLink">
    <a href="#configuration-gpg" class="header-mark"></a>1 Configuration GPG</h2><p>Ex√©cutez la commande suivante :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">gpg --full-generate-key
</span></span><span class="line"><span class="cl">S√©lectionnez une cl√© RSA <span class="o">(</span>question 1<span class="o">)</span> de <span class="m">4096</span> bits <span class="o">(</span>question 2<span class="o">)</span>.
</span></span></code></pre></td></tr></table>
</div>
</div><p>Une fois cette commande effectu√©e, vous pouvez r√©cup√©rer votre cl√© GPG avec cette commande:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">gpg --list-secret-keys --keyid-format LONG alexandre@....
</span></span><span class="line"><span class="cl">/home/alexandre/.gnupg/pubring.kbx
</span></span><span class="line"><span class="cl">----------------------------------
</span></span><span class="line"><span class="cl">sec rsa4096/XXXXXXXXXX 2019-08-09 <span class="o">[</span>SC<span class="o">]</span>
</span></span><span class="line"><span class="cl">XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
</span></span><span class="line"><span class="cl">uid <span class="o">[</span> ultime <span class="o">]</span> Alexandre Touret &lt;mon.mail.github.ou.gitlab@monprovider.fr&gt;
</span></span><span class="line"><span class="cl">ssb rsa4096/XXXXXXXXXX 2019-08-09 <span class="o">[</span>E<span class="o">]</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Ensuite, il faut ex√©cuter cette commande</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">gpg --armor --export XXXXXXXXXX
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="configuration-git" class="headerLink">
    <a href="#configuration-git" class="header-mark"></a>2 Configuration GIT</h2><p>Indiquez la cl√© GPG √† GIT</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git config --local user.signingkey XXXXXXXXXXXX
</span></span></code></pre></td></tr></table>
</div>
</div><p>Et indiquez que vous voulez signer tous vos commits</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git¬†config --local commit.gpgsign <span class="nb">true</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Si vous ne faites pas cette derni√®re commande, vous devrez ajouter l&rsquo;option -S √† chaque ex√©cution de la commande git commit.</p>
<p>Exemple:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git -a -S -m <span class="s2">&#34;Ajout javadoc&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="configuration-github" class="headerLink">
    <a href="#configuration-github" class="header-mark"></a>3 Configuration GITHUB</h2><p>Sur Github ( il y a la m√™me chose sur gitlab), vous pouvez <a href="https://github.com/settings/keys" target="_blank" rel="noopener noreferrer">dans vos param√®tres</a> ajouter cette cl√© . De cette mani√®re, vos prochains commits envoy√©s seront v√©rifi√©s.</p>
<p>En esp√©rant que √ßa serve √† d&rsquo;autres üôÇ</p>
]]></description></item><item><title>G√©rer plusieurs cl√©s et plusieurs repo GIT</title><link>http://blog.touret.info/2018/11/16/gerer-plusieurs-cles-et-plusieurs-repo-git/</link><pubDate>Fri, 16 Nov 2018 13:39:04 +0100</pubDate><author><name>Alexandre Touret</name></author><guid>http://blog.touret.info/2018/11/16/gerer-plusieurs-cles-et-plusieurs-repo-git/</guid><description><![CDATA[<p>En attendant d&rsquo;avoir plus d&rsquo;imagination, voici un rapide tuto pour g√©rer plusieurs r√©f√©rentiels GIT avec des cl√©s SSH diff√©rentes.</p>
<p>Imaginons que vous deviez vous connecter sur diff√©rents serveurs GIT (ex. github et gitlab) avec des emails diff√©rents et donc des cl√©s RSA diff√©rentes ( oui je sais ce cas n&rsquo;arrive pas souvent ). Le tout sous Windows et GNU/LINUX. Sous GNU/LINUX ont peut le g√©rer diff√©remment via la commande ssh-add.</p>
<p>Pour pouvoir g√©rer ceci de mani√®re simple, j&rsquo;ai fait la manipulation suivante :</p>
<p>Dans le r√©pertoire <code>~/.ssh</code>, j&rsquo;ai cr√©e les diff√©rentes cl√©s avec <a href="https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/" target="_blank" rel="noopener noreferrer">la doc fournie par GITHUB</a>. Puis, j&rsquo;ai cr√©e le fichier <code>~/.ssh/config</code> avec le contenu suivant:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">Host monhost1.fr
</span></span><span class="line"><span class="cl">HostName monhost1.fr
</span></span><span class="line"><span class="cl">User git
</span></span><span class="line"><span class="cl">IdentityFile ~/.ssh/id_rsa
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Host monhost2.fr
</span></span><span class="line"><span class="cl">HostName monhost2.fr
</span></span><span class="line"><span class="cl">User git
</span></span><span class="line"><span class="cl">IdentityFile ~/.ssh/nouvellecle_rsa
</span></span></code></pre></td></tr></table>
</div>
</div><p>Et voil√† !</p>
<p>Apr√®s avoir fait les diff√©rentes configurations cot√© serveur (c.-a-d. ajout des cl√©s publiques), je peux interagir avec les diff√©rents serveurs (pull, push).</p>
<p>En esp√©rant que √ßa puisse servir √† d&rsquo;autres.</p>
]]></description></item><item><title>Ma configuration CYGWIN</title><link>http://blog.touret.info/2018/02/16/ma-configuration-cygwin/</link><pubDate>Fri, 16 Feb 2018 09:42:24 +0100</pubDate><author><name>Alexandre Touret</name></author><guid>http://blog.touret.info/2018/02/16/ma-configuration-cygwin/</guid><description><![CDATA[<div class="featured-image">
                <img src="/assets/images/2018/02/2000px-cygwin_logo-svg.png" referrerpolicy="no-referrer">
            </div><p>Dans la s√©rie, <a href="http://blog.touret.info/2018/02/10/ma-configuration-debian-9/" target="_blank" rel="noopener noreferrer">j&rsquo;essaye de sauvegarder toutes mes configurations</a>, voici ce que j&rsquo;ai fait pour configurer correctement <a href="https://cygwin.com/" target="_blank" rel="noopener noreferrer">cygwin</a>.</p>
<p>Pour ceux qui ne connaissent pas ou qui n&rsquo;ont pas la chance d&rsquo;utiliser windows au travail, <a href="https://cygwin.com/" target="_blank" rel="noopener noreferrer">cygwin</a> est un shell avec tous les outils GNU.</p>
<p>En attendant <a href="https://www.howtogeek.com/249966/how-to-install-and-use-the-linux-bash-shell-on-windows-10/" target="_blank" rel="noopener noreferrer">d&rsquo;avoir windows 10 ( au travail ) et un BASH int√©gr√©</a>, il n&rsquo;y a pas mieux. Du moins √† mon humble avis.</p>
<h2 id="git" class="headerLink">
    <a href="#git" class="header-mark"></a>1 GIT</h2><h3 id="compl√©tion" class="headerLink">
    <a href="#compl%c3%a9tion" class="header-mark"></a>1.1 Compl√©tion</h3><p>On a besoin des fichiers suivants</p>
<ul>
<li><a href="https://github.com/git/git/blob/master/contrib/completion/git-completion.bash" target="_blank" rel="noopener noreferrer">git-completion.bash</a></li>
<li><a href="https://github.com/git/git/blob/master/contrib/completion/git-prompt.sh" target="_blank" rel="noopener noreferrer">git-prompt.sh</a></li>
</ul>
<p>Je les ai t√©l√©charg√© et plac√© dans le r√©pertoire $HOME.</p>
<h3 id="activation-de-la-configuration-et-affichage-de-la-branche-en-cours-dans-le-prompt" class="headerLink">
    <a href="#activation-de-la-configuration-et-affichage-de-la-branche-en-cours-dans-le-prompt" class="header-mark"></a>1.2 Activation de la configuration et affichage de la branche en cours dans le prompt</h3><p>J&rsquo;ai activ√© la configuration git en ex√©cutant les scripts pr√©c√©demment t√©l√©charg√©s.</p>
<p>Voici la personnalisation que j&rsquo;ai param√©tr√© dans la variable d&rsquo;environnement PS1:</p>
<script src="https://gist.github.com/alexandre-touret/d4b570813bb1b7bb44a393e69660827e.js"></script>
<p>J&rsquo; ai √©galement activ√© des propri√©t√©s qui √©taient en commentaire dans ce fichier. Je ne les ai pas list√©e pour ne pas trop surcharger l&rsquo;article üôÇ</p>
<h3 id="configuration-nom-et-s√©curit√©" class="headerLink">
    <a href="#configuration-nom-et-s%c3%a9curit%c3%a9" class="header-mark"></a>1.3 Configuration Nom et s√©curit√©</h3><script src="https://gist.github.com/alexandre-touret/4ef7484bc00bf607e3c8e28c1d53afba.js"></script>
<h2 id="vim" class="headerLink">
    <a href="#vim" class="header-mark"></a>2 VIM</h2><p>Que serait un prompt sans vim ?</p>
<p>J&rsquo;ai install√© une suite de plugin : <a href="https://github.com/amix/vimrc" target="_blank" rel="noopener noreferrer">The ultimate vimrc</a>. Il faut cloner le repo GIT et lancer un script</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">    git clone --depth<span class="o">=</span><span class="m">1</span> https://github.com/amix/vimrc.git ~/.vim_runtime
</span></span><span class="line"><span class="cl">    sh ~/.vim_runtime/install_awesome_vimrc.sh
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description></item></channel></rss>