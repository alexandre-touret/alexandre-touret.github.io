<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Integration - Tag - Alexandre Touret's Blog</title><link>https://blog.touret.info/tags/integration/</link><description>Integration - Tag - Alexandre Touret's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution 4.0 International License.</copyright><lastBuildDate>Tue, 10 Apr 2018 15:15:05 +0200</lastBuildDate><atom:link href="https://blog.touret.info/tags/integration/" rel="self" type="application/rss+xml"/><item><title>IntÃ©gration et mÃ©diation avec Apache Camel</title><link>https://blog.touret.info/2018/04/10/integration-et-mediation-avec-apache-camel/</link><pubDate>Tue, 10 Apr 2018 15:15:05 +0200</pubDate><author><name>Alexandre Touret</name></author><guid>https://blog.touret.info/2018/04/10/integration-et-mediation-avec-apache-camel/</guid><description><![CDATA[<div class="featured-image">
                <img src="/assets/images/2018/04/apache-camel-logo.png" referrerpolicy="no-referrer">
            </div><p>Depuis quelques jours, je teste <a href="https://camel.apache.org/" target="_blank" rel="noopener noreferrer">Apache Camel</a> pour la mise en Å“uvreÂ  de mÃ©diations.</p>
<p><a href="https://camel.apache.org/" target="_blank" rel="noopener noreferrer">Apache Camel</a> est un framework assez ancien. Il est similaire Ã  <a href="https://projects.spring.io/spring-integration/" target="_blank" rel="noopener noreferrer">Spring IntÃ©gration</a> et permet l&rsquo; implÃ©mentation de <a href="http://www.enterpriseintegrationpatterns.com/patterns/messaging/Chapter1.html" target="_blank" rel="noopener noreferrer">patterns d&rsquo;intÃ©gration</a>.</p>
<h2 id="les-patterns-dintÃ©gration" class="headerLink">
    <a href="#les-patterns-dint%c3%a9gration" class="header-mark"></a>1 Les patterns d&rsquo;intÃ©gration</h2><p>Qu&rsquo;est-ce qu&rsquo;un <a href="http://www.enterpriseintegrationpatterns.com/patterns/messaging/Chapter1.html" target="_blank" rel="noopener noreferrer">pattern d&rsquo;intÃ©gration</a> allez-vous me dire ? C&rsquo;est une solution d&rsquo;architecture ou plus simplement une recette de cuisine permettant d&rsquo;avoir une solution toute prÃªte Ã  une problÃ©matique d&rsquo;intÃ©gration donnÃ©e. L&rsquo;ensemble de ces patterns est dÃ©crit sur <a href="http://www.enterpriseintegrationpatterns.com/" target="_blank" rel="noopener noreferrer">ce site</a> ( ne vous attardez pas sur le look des annÃ©es 90 â€¦ ).</p>
<p>Exemple :</p>
<div id="id-1"><img class="tw-inline" loading="lazy" src=https://blog.touret.info/assets/images/2018/04/publishsubscribesolution.gif   alt="publish_subscribe"  ></div>
<p>Camel permet simplement de gÃ©rer l&rsquo;intÃ©gration via un DSL.</p>
<h3 id="choix-dimplÃ©mentations" class="headerLink">
    <a href="#choix-dimpl%c3%a9mentations" class="header-mark"></a>1.1 Choix d&rsquo;implÃ©mentations</h3><p>On peut faire pas mal de choses avec ce FRAMEWORK et de plusieurs maniÃ¨res. J&rsquo;ai fait les choix d&rsquo;implÃ©mentation suivants :</p>
<ul>
<li>Tout se fera avec SPRING â€¦ et pas en XML ğŸ™‚</li>
<li>Il faut que toutes les mÃ©diations soient testables</li>
<li>J&rsquo;exÃ©cute le code dans un FATJAR ( pourquoi avec springboot )</li>
</ul>
<h2 id="configuration-de-la-route" class="headerLink">
    <a href="#configuration-de-la-route" class="header-mark"></a>2 Configuration de la route</h2><p>Apache Camel dÃ©finit les mÃ©diations dans des routes. Elles se dÃ©finissent assez rapidement .</p>
<p>Les routes commencent par une instruction from et se terminent par une ou plusieurs instructions to.</p>
<p>Pour mon exemple, j&rsquo;extrais les donnÃ©es d&rsquo;une table et les stocke dans un fichier.</p>
<p>Tout se configure par des URLs. La premiÃ¨re permet d&rsquo;extraire les donnÃ©es via JPA/HIBERNATE. Une entitÃ© Address permet le requÃªtage. La seconde permet le stockage dans un fichier texte JSON.</p>
<p>Elles sont externalisÃ©es dans des fichiers de configuration pour faciliter les tests et accessibles via SPRING.</p>
<p><script src="https://gist.github.com/alexandre-touret/470b84ac760c4f70d093753c63ec153b.js.js"></script>

<script src="https://gist.github.com/alexandre-touret/470b84ac760c4f70d093753c63ec153b.js"></script>
</p>
<h2 id="lancement-de-la-route" class="headerLink">
    <a href="#lancement-de-la-route" class="header-mark"></a>3 Lancement de la route</h2><p>Le lancement de la route se fait dans une mÃ©thode main() :</p>
<script src="https://gist.github.com/alexandre-touret/40f3cfa13f5947aa922fc1f796668c59.js.js"></script>

<h2 id="tests" class="headerLink">
    <a href="#tests" class="header-mark"></a>4 Tests</h2><p>Camel fournit une API de test assez bien fournie. Elle permet notamment de mocker des endpoints existants (ex. : le fichier de sortie de mon cas de test).</p>
<p>Dans mon cas, j&rsquo;ai dÃ©cidÃ© de remplacer la base de donnÃ©es que j&rsquo;interroge en input par une <a href="http://hsqldb.org/doc/guide/ch01.html#N101CA" target="_blank" rel="noopener noreferrer">base HSQLDB chargÃ©e en mÃ©moire</a>. Le fichier de sortie est, lui, remplacÃ© dynamiquement par un <a href="https://camel.apache.org/mock.html" target="_blank" rel="noopener noreferrer">mock</a>. Pour ce faire, j&rsquo;ai utilisÃ© les Â«Â adviceWithÂ Â»</p>
<script src="https://gist.github.com/alexandre-touret/391305e01510e65703a26c46c2e233f5.js.js"></script>

<h2 id="pour-aller-plus-loin" class="headerLink">
    <a href="#pour-aller-plus-loin" class="header-mark"></a>5 Pour aller plus loin</h2><p>Il y a pas mal d&rsquo;exemples sur le GITHUB de CAMEL. Vous pouvez Ã©galement acheter <a href="https://www.manning.com/books/camel-in-action-second-edition" target="_blank" rel="noopener noreferrer">le livre Â«Â Camel In ActionÂ Â»</a>. Ca ne vaut pas <a href="https://www.amazon.fr/dp/B00B8V09HY/ref=dp-kindle-redirect?_encoding=UTF8&amp;btkr=1" target="_blank" rel="noopener noreferrer">Effective Java</a> ğŸ™‚ , mais vu qu&rsquo;il est Ã©crit par le principal dÃ©veloppeur, c&rsquo;est une trÃ¨s bonne rÃ©fÃ©rence.</p>
<p>Â </p>
<p>Â </p>
]]></description></item></channel></rss>