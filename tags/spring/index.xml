<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>spring - Balise - Alexandre Touret's Blog</title><link>http://blog.touret.info/tags/spring/</link><description>spring - Balise - Alexandre Touret's Blog</description><generator>Hugo -- gohugo.io</generator><language>fr</language><copyright>This work is licensed under a Creative Commons Attribution 4.0 International License.</copyright><lastBuildDate>Thu, 22 Dec 2022 08:00:00 +0000</lastBuildDate><atom:link href="http://blog.touret.info/tags/spring/" rel="self" type="application/rss+xml"/><item><title>Migrer son application Spring Boot vers la version 3</title><link>http://blog.touret.info/2022/12/22/migration_springboot3/</link><pubDate>Thu, 22 Dec 2022 08:00:00 +0000</pubDate><author><name>Alexandre Touret</name></author><guid>http://blog.touret.info/2022/12/22/migration_springboot3/</guid><description><![CDATA[<div class="featured-image">
                <img src="/assets/images/2022/12/spring.webp" referrerpolicy="no-referrer">
            </div>Pour ce dernier article de l&rsquo;année 2022, voici un rapide retour d&rsquo;expérience.
Je suis actuellement en cours de préparation d&rsquo;un workshop pour l&rsquo;édition 2023 de SnowcampIO. J&rsquo;aborderai dans ce dernier le versioning des APIs REST. Pour illustrer ce sujet ô combien épineux, j&rsquo;ai réalisé une plateforme &ldquo;microservices&rdquo; en utilisant différents composants de la stack Spring.
Container Tools Comments API Gateway Spring Cloud Gateway 2022.0.0-RC2 Bookstore API JAVA 17,Spring Boot 3.0.X ISBN API JAVA 17,Spring Boot 3.]]></description></item><item><title>Déployer des batchs cloud native avec Spring Cloud Data Flow</title><link>http://blog.touret.info/2022/08/16/spring-data-flow/</link><pubDate>Tue, 16 Aug 2022 08:00:00 +0000</pubDate><author><name>Alexandre Touret</name></author><guid>http://blog.touret.info/2022/08/16/spring-data-flow/</guid><description><![CDATA[<div class="featured-image">
                <img src="/assets/images/2022/08/maksym-tymchyk-vHO-yT1BDWk-unsplash.webp" referrerpolicy="no-referrer">
            </div>Dans mon dernier article, j&rsquo;ai tenté de faire un état des lieux des solutions possibles pour implémenter des batchs cloud natifs.
J&rsquo;ai par la suite testé plus en détails les jobs et cron jobs Kubernetes en essayant d&rsquo;avoir une vue OPS sur ce sujet. Le principal inconvénient (qui ne l&rsquo;est pas dans certains cas) des jobs est qu&rsquo;on ne peut pas les rejouer. Si ces derniers sont terminés avec succès - Vous allez me dire, il faut bien les coder - mais qu&rsquo;on souhaite les rejouer pour diverses raisons, on doit les supprimer et relancer.]]></description></item><item><title>Observabilité et Circuit Breaker avec Spring</title><link>http://blog.touret.info/2021/07/26/observabilite-et-circuit-breaker-avec-spring/</link><pubDate>Mon, 26 Jul 2021 11:53:49 +0000</pubDate><author><name>Alexandre Touret</name></author><guid>http://blog.touret.info/2021/07/26/observabilite-et-circuit-breaker-avec-spring/</guid><description><![CDATA[<div class="featured-image">
                <img src="/assets/images/2021/07/rest-book-architecture.png" referrerpolicy="no-referrer">
            </div>Il y a quelques mois déjà, je discutais avec un collègue d&rsquo; observabilité, opentracing, … avec Quarkus. On est tombé sur un super exemple réalisé par Antonio Concalves. Ce projet démontre les capacités de Quarkus sur les sujets suivants:
Circuit Breaker Observabilité OpenTracing Tests … Et la on peut se demander quid de Spring? Je me doutais que ces fonctionnalités étaient soient disponibles par défaut soient facilement intégrables vu la richesse de l&rsquo;écosystème.]]></description></item><item><title>Ajouter un mode « maintenance » à votre API grâce à Spring boot</title><link>http://blog.touret.info/2021/06/10/ajouter-un-mode-maintenance-a-votre-api-grace-a-spring-boot/</link><pubDate>Thu, 10 Jun 2021 17:01:20 +0200</pubDate><author><name>Alexandre Touret</name></author><guid>http://blog.touret.info/2021/06/10/ajouter-un-mode-maintenance-a-votre-api-grace-a-spring-boot/</guid><description><![CDATA[<div class="featured-image">
                <img src="/assets/images/2021/06/pexels-photo-257736.jpeg" referrerpolicy="no-referrer">
            </div>Quand vous avez une API, et a fortiori une application, il peut être parfois nécessaire de passer l&rsquo;application en mode « maintenance ».
Pour certaines applications il est parfois inutile de le traiter au niveau applicatif, car ça peut être pris géré par certaines couches de sécurité ou frontaux web par ex. (Apache HTTPD, WAF)
Kubernetes a introduit ( ou popularisé ) les notions de « probes » et plus particulièrement les livenessProbes et readinessProbes.]]></description></item><item><title>Programmmation par aspect avec Spring AOP</title><link>http://blog.touret.info/2019/11/05/programmmation-par-aspect-avec-spring-aop/</link><pubDate>Tue, 05 Nov 2019 18:12:54 +0100</pubDate><author><name>Alexandre Touret</name></author><guid>http://blog.touret.info/2019/11/05/programmmation-par-aspect-avec-spring-aop/</guid><description><![CDATA[<div class="featured-image">
                <img src="/assets/images/2019/11/stanley-dai-73ozynjvoni-unsplash.jpg" referrerpolicy="no-referrer">
            </div>Une fois n&rsquo;est pas coutume, voici un article qui reprend des basiques de la programmation. J&rsquo;aborde une stack JAVA, mais c&rsquo;est applicable à d&rsquo;autres langages.
Il existe une fonctionnalité très intéressante dans Spring (et dans J(akarta)EE) que l&rsquo;on oublie assez souvent : l&rsquo;AOP ou encore la programmation par aspect. Cette manière de programmer permet notamment de séparer le code fonctionnel et technique.
Si vous faites du JAVA, vous utilisez déjà l&rsquo;AOP.]]></description></item><item><title>Tracer (facilement) les entrées sorties d'une API REST</title><link>http://blog.touret.info/2018/12/01/tracer-facilement-les-entrees-sorties-dune-api-rest/</link><pubDate>Sat, 01 Dec 2018 15:51:50 +0100</pubDate><author><name>Alexandre Touret</name></author><guid>http://blog.touret.info/2018/12/01/tracer-facilement-les-entrees-sorties-dune-api-rest/</guid><description><![CDATA[<div class="featured-image">
                <img src="/assets/images/2018/12/street_city_people_blackandwhite_bw_man_detail_project-248333-jpgd.jpeg" referrerpolicy="no-referrer">
            </div>Il y a quelques jours, je cherchais comment tracer rapidement et simplement les entrées sorties d&rsquo;une API REST en appliquant quelques formatages, des filtres, et des insertions en base si besoin.
Travaillant sur une stack SpringBoot, vous allez me dire : oui tu peux faire des filtres. Pour être franc, j&rsquo;ai essayé d&rsquo; appliquer des interceptor et filtres mais dans mon contexte, ça ne collait pas.
Me voilà donc à la recherche d&rsquo;une solution faisant le taff et qui soit peu intrusive dans mon contexte.]]></description></item></channel></rss>