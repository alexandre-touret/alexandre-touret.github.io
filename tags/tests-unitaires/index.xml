<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>tests-unitaires - Balise - Alexandre Touret's Blog</title><link>http://blog.touret.info/tags/tests-unitaires/</link><description>tests-unitaires - Balise - Alexandre Touret's Blog</description><generator>Hugo -- gohugo.io</generator><language>fr</language><copyright>This work is licensed under a Creative Commons Attribution 4.0 International License.</copyright><lastBuildDate>Fri, 16 Aug 2019 08:26:57 +0200</lastBuildDate><atom:link href="http://blog.touret.info/tags/tests-unitaires/" rel="self" type="application/rss+xml"/><item><title>Mocker des méthodes « final » avec Mockito</title><link>http://blog.touret.info/2019/08/16/mocker-des-methodes-final-avec-mockito/</link><pubDate>Fri, 16 Aug 2019 08:26:57 +0200</pubDate><author>Alexandre Touret</author><guid>http://blog.touret.info/2019/08/16/mocker-des-methodes-final-avec-mockito/</guid><description><![CDATA[<div class="featured-image">
                <img src="/assets/images/2019/08/logo-mockito.png" referrerpolicy="no-referrer">
            </div>Auparavant, dans nos tests, quand on voulait mocker des méthodes « final » ou statiques, on devait passer par PowerMock.
Depuis peu, si on utilise Mockito ( &gt;2.1) , on n&rsquo;a plus besoin d&rsquo;ajouter PowerMock pour mocker des méthodes « final ».
Bon il reste toujours la gestion des méthodes statiques à gérer autrement qu&rsquo;avec Mockito, mais cela va dans le bon sens.
Voici comment activer en quelques commandes le mocking des méthodes « final ».]]></description></item></channel></rss>